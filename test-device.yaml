# These substitutions allow the end user to override certain values
substitutions:
  name: "test-device"
  friendly_name: "Test Device69"


esphome:
  name: "${name}"
  # Friendly names are used where appropriate in Home Assistant
  friendly_name: "${friendly_name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: delqueso.test-device
    version: "1.3"


esp32:
  board: esp32dev
  framework:
    type: arduino

  

# Enable Home Assistant API
api:

ota:
  - platform: esphome

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://esphome/esphome-project-template/project-template-esp32.yaml@v6
  import_full_config: false # or true


wifi:
  #use_address: pyl-test.private.unibe.ch
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
  
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    password: "12345678"

logger:

# Define GPIO outputs
output:
  - platform: gpio
    pin: GPIO18
    id: red_led_bottom

  - platform: gpio
    pin: GPIO22
    id: green_led_top

  - platform: gpio
    pin: GPIO19
    id: blue_led_bottom

  - platform: gpio
    pin: GPIO21
    id: red_led_top

# Define leds
light:
  - platform: binary
    id: red_led_error
    output: red_led_bottom
    name: "Red LED Bottom"

  - platform: binary
    output: blue_led_bottom
    name: "Blue LED Bottom"

  - platform: binary
    id: status_led_nok
    output: red_led_top
    name: "Red LED Top"
    
  - platform: binary
    id: status_led_ok
    internal: true
    output: green_led_top

i2c:
  sda: GPIO14
  scl: GPIO13
  scan: true
  id: bus_a
sensor:
  - platform: sht4x
    id: temperature_sensor  # Set id for the sensor
    temperature:
      name: "Temperature"
      force_update: true 
    humidity:
      name: "Relative Humidity"
      force_update: true 
    update_interval: 60s  # We control when to read data
    

# Connection status, door open, alarm handling
interval:
  - interval: 1s
    then:
      if:
        condition:
          wifi.connected:
        then:
          - if:
              condition:
                api.connected:
              then:
                - light.turn_on:
                    id: status_led_ok
                    flash_length: 100ms
                - light.turn_off:
                    id: status_led_nok
              else:
                - light.turn_on:
                    id: status_led_nok
                    flash_length: 100ms
                - light.turn_off:
                    id: status_led_ok
        else:
          - light.turn_on:
              id: status_led_nok
              flash_length: 500ms
          - light.turn_off:
              id: status_led_ok



